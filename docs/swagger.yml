openapi: 3.0.3
info:
  version: 1.0.0
  title: KING OF TIME WebAPI
  description: 'KING OF TIME WebAPI specification https://developer.kingtime.jp/'
servers:
  - url: 'https://api.kingtime.jp/v1.0'
    description: Production server (uses live data)
paths:
  '/tokens/{token}':
    post:
      operationId: RefreshAccessToken
      parameters:
        - $ref: '#/components/parameters/token'
      tags:
        - Token
      description: 指定されたアクセストークンを利用停止し、新たに同じ設定でアクセストークンを発行する。
      externalDocs:
        url: 'https://developer.kingtime.jp/#%E3%83%88%E3%83%BC%E3%82%AF%E3%83%B3-%E3%82%A2%E3%82%AF%E3%82%BB%E3%82%B9%E3%83%88%E3%83%BC%E3%82%AF%E3%83%B3-post'
      responses:
        '201':
          description: ''
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
          content:
            application/json:
              schema:
                type: object
                required:
                  - token
                properties:
                  token:
                    type: string
                    description: refreshed access token
                    example: XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
    delete:
      operationId: SuspendAccessToken
      parameters:
        - $ref: '#/components/parameters/token'
      tags:
        - Token
      description: 指定されたアクセストークンを利用停止する。
      externalDocs:
        url: 'https://developer.kingtime.jp/#%E3%83%88%E3%83%BC%E3%82%AF%E3%83%B3-%E3%82%A2%E3%82%AF%E3%82%BB%E3%82%B9%E3%83%88%E3%83%BC%E3%82%AF%E3%83%B3-delete'
      responses:
        '204':
          description: This response has no content.
  '/tokens/{token}/available':
    get:
      operationId: GetAccessTokenAvailability
      parameters:
        - $ref: '#/components/parameters/token'
      tags:
        - Token
      description: 指定されたアクセストークンが有効か確認する。
      externalDocs:
        url: 'https://developer.kingtime.jp/#%E3%83%88%E3%83%BC%E3%82%AF%E3%83%B3-%E3%82%A2%E3%82%AF%E3%82%BB%E3%82%B9%E3%83%88%E3%83%BC%E3%82%AF%E3%83%B3-get'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                required:
                  - available
                properties:
                  available:
                    type: boolean
  /company:
    get:
      operationId: GetCompany
      tags:
        - Company
      description: 企業情報データを取得する。
      externalDocs:
        description: 一覧
        url: 'https://developer.kingtime.jp/#%E4%BC%81%E6%A5%AD%E6%83%85%E5%A0%B1-%E4%BC%81%E6%A5%AD%E6%83%85%E5%A0%B1%E3%83%87%E3%83%BC%E3%82%BF-get'
      responses:
        '200':
          description: ''
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
                required:
                  - key
                  - code
                  - name
                  - host
                  - businessYearStartDate
                  - settings
                properties:
                  key:
                    type: string
                    description: 企業識別キー
                  code:
                    type: string
                    description: 企業コード
                  name:
                    type: string
                    description: 企業名
                  host:
                    type: string
                    description: ホスト名
                  businessYearStartDate:
                    type: string
                    description: 事業年度開始日
                  settings:
                    type: object
                    description: 企業設定情報
                    required:
                      - timeDisplayFormat
                      - decimalTreatType
                    properties:
                      timeDisplayFormat:
                        type: string
                        description: 表示形式（decimal： 10進法　sexagesimal： 60進法）
                      decimalTreatType:
                        type: string
                        description: 10進表示の小数第3位の扱い（roundDown： 切下げ　roundUp： 切上げ　round： 四捨五入）
                example:
                  key: 1qazxsw23edc....
                  code: cmp
                  name: 企業名
                  host: s2.kingtime.jp
                  businessYearStartDate: 04/01
                  settings:
                    timeDisplayFormat: decimal
                    decimalTreatType: roundUp
  /administrators:
    get:
      operationId: GetAdministrators
      parameters:
        - $ref: '#/components/parameters/additionalFields_administrator'
      tags:
        - Administrator
      description: 管理者のデータを取得する。
      externalDocs:
        description: 一覧
        url: 'https://developer.kingtime.jp/#%E7%AE%A1%E7%90%86%E8%80%85-%E7%AE%A1%E7%90%86%E8%80%85%E3%83%87%E3%83%BC%E3%82%BF-get'
      responses:
        '200':
          description: ''
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  required:
                    - code
                    - key
                    - name
                  properties:
                    code:
                      type: string
                      description: 管理者コード
                    key:
                      type: string
                      description: 管理者識別キー（管理者コードが変更されても不変）
                    name:
                      type: string
                      description: 管理者名
                    emailAddresses:
                      type: string
                      format: email
                      description: メールアドレス
                    associatedEmployees:
                      type: array
                      items:
                        type: object
                        description: 割当従業員
                        required:
                          - code
                          - key
                          - lastName
                          - firstName
                        properties:
                          code:
                            type: string
                            description: 従業員コード
                          key:
                            type: string
                            description: 従業員識別キー（従業員コードが変更されても不変）
                          lastName:
                            type: string
                            description: 姓
                          firstName:
                            type: string
                            description: 名
                example:
                  - code: admin
                    key: 4888a97dd7bbc6a26a18743f4697a1de4b38b6ee646a9620b286499c3df6918c
                    name: 全権管理者
                  - code: '2000'
                    key: 6713cd21ca98689efec9fe27352152c4c77a34b32f5de30b6335d141ad714baf
                    name: エリアマネージャー
                    associatedEmployees:
                      - code: '1000'
                        key: 8b6ee646a9620b286499c3df6918c4888a97dd7bbc6a26a18743f4697a1de4b3
                        lastName: 勤怠
                        firstName: 太郎
                      - code: '2000'
                        key: c77a34b32f5de30b6335d141ad714baf6713cd21ca98689efec9fe27352152c4
                        lastName: 勤怠
                        firstName: 花子
  /employees:
    get:
      operationId: GetEmployees
      parameters:
        - $ref: '#/components/parameters/date'
        - $ref: '#/components/parameters/division'
        - $ref: '#/components/parameters/includeResigner'
        - $ref: '#/components/parameters/additionalFields_employee'
      tags:
        - Employee
      description: 従業員データの一覧を取得する。
      externalDocs:
        description: 一覧
        url: 'https://developer.kingtime.jp/#%E5%BE%93%E6%A5%AD%E5%93%A1-%E5%BE%93%E6%A5%AD%E5%93%A1%E3%83%87%E3%83%BC%E3%82%BF-get'
      responses:
        '200':
          description: ''
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/employee_response'
                example:
                  - divisionCode: '1000'
                    divisionName: 本社
                    gender: male
                    typeCode: '1'
                    typeName: 正社員
                    code: '1000'
                    lastName: 勤怠
                    firstName: 太郎
                    key: 8b6ee646a9620b286499c3df6918c4888a97dd7bbc6a26a18743f4697a1de4b3
                    emailAddresses:
                      - kintaitarou@h-t.co.jp
                    employeeGroups:
                      - code: '0001'
                        name: 人事部
                      - code: '0002'
                        name: 総務部
                  - divisionCode: '1000'
                    divisionName: 本社
                    gender: female
                    typeCode: '1'
                    typeName: 正社員
                    code: '2000'
                    lastName: 勤怠
                    firstName: 花子
                    key: c77a34b32f5de30b6335d141ad714baf6713cd21ca98689efec9fe27352152c4
                    emailAddresses:
                      - kintaihanako@h-t.co.jp
                    employeeGroups:
                      - code: '0003'
                        name: 営業部
    post:
      operationId: RegisterEmployee
      tags:
        - Employee
      description: 従業員のデータを登録する。(1件)
      externalDocs:
        description: 登録
        url: 'https://developer.kingtime.jp/#%E5%BE%93%E6%A5%AD%E5%93%A1-%E5%BE%93%E6%A5%AD%E5%93%A1%E3%83%87%E3%83%BC%E3%82%BF-post'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/employee_request'
              example:
                divisionCode: '1000'
                gender: male
                typeCode: '1'
                code: '1000'
                lastName: 勤怠
                firstName: 太郎
                emailAddresses:
                  - kintaitarou@h-t.co.jp
      responses:
        '201':
          description: ''
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
                required:
                  - divisionCode
                  - gender
                  - typeCode
                  - code
                  - lastName
                  - firstName
                  - key
                properties:
                  divisionCode:
                    type: string
                    description: 所属コード
                  gender:
                    type: string
                    description: 性別（male： 男性　female： 女性）
                  typeCode:
                    type: string
                    description: 雇用区分コード
                  code:
                    type: string
                    description: 従業員コード
                  lastName:
                    type: string
                    description: 姓
                  firstName:
                    type: string
                    description: 名
                  key:
                    type: string
                    description: 従業員識別キー（従業員コードが変更されても不変）
                example:
                  divisionCode: '1000'
                  gender: male
                  typeCode: '1'
                  code: '1000'
                  lastName: 勤怠
                  firstName: 太郎
                  key: c77a34b32f5de30b6335d141ad714baf6713cd21ca98689efec9fe27352152c4
                  emailAddresses:
                    - kintaitarou@h-t.co.jp
  '/employees/{employeeCode}':
    get:
      operationId: GetEmployee
      parameters:
        - $ref: '#/components/parameters/employeeCode'
        - $ref: '#/components/parameters/date'
        - $ref: '#/components/parameters/includeResigner'
        - $ref: '#/components/parameters/additionalFields_employee'
      tags:
        - Employee
      description: 指定した従業員のデータを取得する。
      externalDocs:
        description: 従業員指定
        url: 'https://developer.kingtime.jp/#%E5%BE%93%E6%A5%AD%E5%93%A1-%E5%BE%93%E6%A5%AD%E5%93%A1%E3%83%87%E3%83%BC%E3%82%BF-get-1'
      responses:
        '200':
          description: ''
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/employee_response'
                example:
                  divisionCode: '1000'
                  divisionName: 本社
                  gender: male
                  typeCode: '1'
                  typeName: 正社員
                  code: '1000'
                  lastName: 勤怠
                  firstName: 太郎
                  key: 8b6ee646a9620b286499c3df6918c4888a97dd7bbc6a26a18743f4697a1de4b3
                  emailAddresses:
                    - kintaitarou@h-t.co.jp
                  employeeGroups:
                    - code: '0001'
                      name: 人事部
                    - code: '0002'
                      name: 総務部
  '/employees/{employeeKey}':
    put:
      operationId: UpdateEmployee
      parameters:
        - $ref: '#/components/parameters/employeeKey'
        - $ref: '#/components/parameters/updateDate'
      tags:
        - Employee
      description: |-
        従業員のデータを更新する。(1件)
        Request Bodyにて指定された項目のみ更新する。
        項目が指定され、値が無いまたは空文字列の場合は、該当項目をNULLで更新する。
        レスポンスには、AdditionalFieldを含むすべての従業員データを含める。
      externalDocs:
        description: 更新
        url: 'https://developer.kingtime.jp/#%E5%BE%93%E6%A5%AD%E5%93%A1-%E5%BE%93%E6%A5%AD%E5%93%A1%E3%83%87%E3%83%BC%E3%82%BF-put'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                divisionCode:
                  type: string
                  description: 所属コード
                gender:
                  type: string
                  description: 性別（male： 男性　female： 女性）
                typeCode:
                  type: string
                  description: 雇用区分コード
                code:
                  type: string
                  description: 従業員コード
                lastName:
                  type: string
                  description: 姓
                firstName:
                  type: string
                  description: 名
                lastNamePhonetics:
                  type: string
                  description: 姓（カナ）
                firstNamePhonetics:
                  type: string
                  description: 名（カナ）
                hiredDate:
                  type: string
                  format: date
                  description: 入社年月日
                birthDate:
                  type: string
                  format: date
                  description: 生年月日
                resignationDate:
                  type: string
                  format: date
                  description: 退職年月日
                emailAddresses:
                  type: array
                  description: メールアドレス
                  items:
                    type: string
                    format: email
                allDayRegardingWorkInMinute:
                  type: integer
                  description: 日の契約労働時間
                  example: 480
              example:
                divisionCode: '1000'
                gender: male
                typeCode: '1'
                code: '1000'
                lastName: 勤怠
                firstName: 太郎
                emailAddresses:
                  - kintaitarou@h-t.co.jp
      responses:
        '200':
          description: ''
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/employee_response'
                example:
                  divisionCode: '1000'
                  divisionName: 本社
                  gender: male
                  typeCode: '1'
                  typeName: 正社員
                  code: '1000'
                  lastName: 勤怠
                  firstName: 太郎
                  key: c77a34b32f5de30b6335d141ad714baf6713cd21ca98689efec9fe27352152c4
                  lastNamePhonetics: キンタイ
                  firstNamePhonetics: タロウ
                  birthDate: '1990-09-01'
                  hiredDate: '2013-04-01'
                  resignationDate: '2017-12-12'
                  emailAddresses:
                    - kintaitarou@h-t.co.jp
                  allDayRegardingWorkInMinute: 480
    delete:
      operationId: DeleteEmployee
      parameters:
        - $ref: '#/components/parameters/employeeKey'
      tags:
        - Employee
      description: 従業員のデータを削除する。(1件)
      externalDocs:
        description: 削除
        url: 'https://developer.kingtime.jp/#%E5%BE%93%E6%A5%AD%E5%93%A1-%E5%BE%93%E6%A5%AD%E5%93%A1%E3%83%87%E3%83%BC%E3%82%BF-delete'
      responses:
        '204':
          description: This response has no content.
  /divisions:
    get:
      operationId: GetDivisions
      tags:
        - Employee
      description: 所属データの一覧を取得する。
      externalDocs:
        description: 一覧
        url: 'https://developer.kingtime.jp/#%E5%BE%93%E6%A5%AD%E5%93%A1-%E6%89%80%E5%B1%9E%E3%83%87%E3%83%BC%E3%82%BF-get'
      responses:
        '200':
          description: ''
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/division_response'
                example:
                  - code: '1000'
                    name: 本社
                    dayBorderTime: '00:00'
                  - code: '2000'
                    name: 支社
                    dayBorderTime: '05:00'
  /working-types:
    get:
      operationId: GetWorkingTypes
      tags:
        - Employee
      description: 雇用区分データの一覧を取得する。
      externalDocs:
        description: 一覧
        url: 'https://developer.kingtime.jp/#%E5%BE%93%E6%A5%AD%E5%93%A1-%E9%9B%87%E7%94%A8%E5%8C%BA%E5%88%86%E3%83%87%E3%83%BC%E3%82%BF-get'
      responses:
        '200':
          description: ''
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/working_type_response'
                example:
                  - code: '1'
                    name: 正社員
components:
  parameters:
    token:
      name: token
      in: path
      description: 処理対象のトークン
      required: true
      schema:
        type: string
        example: 8j9f7v4893y58rvt7nyfq2893n75tr78937n83
    additionalFields_administrator:
      name: additionalFields
      in: query
      description: 指定されたプロパティをレスポンスに追加
      explode: false
      schema:
        type: array
        items:
          type: string
          enum:
            - emailAddresses
            - associatedEmployees
        example:
          - associatedEmployees
    additionalFields_employee:
      name: additionalFields
      in: query
      description: 指定されたプロパティをレスポンスに追加
      explode: false
      schema:
        type: array
        items:
          type: string
          enum:
            - lastNamePhonetics
            - firstNamePhonetics
            - hiredDate
            - birthDate
            - resignationDate
            - emailAddresses
            - allDayRegardingWorkInMinute
        example:
          - emailAddresses
    date:
      name: date
      in: query
      description: |-
        指定された年月日時点での従業員のデータを表示
        ・過去日は最大3年前まで
        ・未来日は最大1年後まで
      schema:
        type: string
        format: date
        description: defaultは当日
        example: 2016-10-10T00:00:00.000Z
    division:
      name: division
      in: query
      description: 所属コード
      schema:
        type: string
        example: 1000
    includeResigner:
      name: includeResigner
      in: query
      description: 指定された年月日時点で退職済みの従業員を含む場合 True
      schema:
        type: boolean
        example: true
        default: false
    employeeCode:
      name: employeeCode
      in: path
      description: 詳細を取得したい従業員コード
      required: true
      schema:
        type: string
        example: 1000
    employeeKey:
      name: employeeKey
      in: path
      description: 従業員識別キー（従業員コードが変更されても不変）
      required: true
      schema:
        type: string
        example: 8b6ee646a9620b286499c3df6918c4888a97dd7bbc6a26a18743f4697a1de4b3
    updateDate:
      name: updateDate
      in: query
      description: 所属、雇用区分を更新したい年月日
      schema:
        type: string
        format: date
        description: defaultは当日
        example: 2016-05-01T00:00:00.000Z
  schemas:
    employee_response:
      type: object
      required:
        - divisionCode
        - divisionName
        - gender
        - typeCode
        - typeName
        - code
        - key
        - lastName
        - firstName
        - employeeGroups
      properties:
        divisionCode:
          type: string
          description: 所属コード
        divisionName:
          type: string
          description: 所属名
        gender:
          type: string
          description: 性別（male： 男性　female： 女性）
        typeCode:
          type: string
          description: 雇用区分コード
        typeName:
          type: string
          description: 雇用区分名
        code:
          type: string
          description: 従業員コード
        key:
          type: string
          description: 従業員識別キー（従業員コードが変更されても不変）
        lastName:
          type: string
          description: 姓
        firstName:
          type: string
          description: 名
        employeeGroups:
          type: array
          description: 従業員グループ情報
          items:
            type: object
            required:
              - code
              - name
            properties:
              code:
                type: string
                description: 従業員グループコード
              name:
                type: string
                description: 従業員グループ名
        lastNamePhonetics:
          type: string
          description: 姓（カナ）
        firstNamePhonetics:
          type: string
          description: 名（カナ）
        hiredDate:
          type: string
          format: date
          description: 入社年月日
        birthDate:
          type: string
          format: date
          description: 生年月日
        resignationDate:
          type: string
          format: date
          description: 退職年月日
        emailAddresses:
          type: array
          description: メールアドレス
          items:
            type: string
            format: email
        allDayRegardingWorkInMinute:
          type: integer
          description: 日の契約労働時間
          example: 480
    employee_request:
      type: object
      required:
        - divisionCode
        - gender
        - typeCode
        - code
        - lastName
        - firstName
      properties:
        divisionCode:
          type: string
          description: 所属コード
        gender:
          type: string
          description: 性別（male： 男性　female： 女性）
        typeCode:
          type: string
          description: 雇用区分コード
        code:
          type: string
          description: 従業員コード
        lastName:
          type: string
          description: 姓
        firstName:
          type: string
          description: 名
        lastNamePhonetics:
          type: string
          description: 姓（カナ）
        firstNamePhonetics:
          type: string
          description: 名（カナ）
        hiredDate:
          type: string
          format: date
          description: 入社年月日
        birthDate:
          type: string
          format: date
          description: 生年月日
        resignationDate:
          type: string
          format: date
          description: 退職年月日
        emailAddresses:
          type: array
          description: メールアドレス
          items:
            type: string
            format: email
        allDayRegardingWorkInMinute:
          type: integer
          description: 日の契約労働時間
          example: 480
    division_response:
      type: object
      required:
        - code
        - name
        - dayBorderTime
      properties:
        code:
          type: string
          description: 所属コード
        name:
          type: string
          description: 所属名
        dayBorderTime:
          type: string
          pattern: '^(?:[01][0-9]|2[0-3]):[0-5][0-9]$'
          description: 所属名
    working_type_response:
      type: object
      required:
        - code
        - name
        - dayBorderTime
      properties:
        code:
          type: string
          description: 雇用区分コード
        name:
          type: string
          description: 雇用区分名
  securitySchemes:
    Bearer:
      type: http
      scheme: bearer
      description: Credentials or access token for API
security:
  - Bearer: []
tags:
  - name: Token
    externalDocs:
      url: 'https://developer.kingtime.jp/#%E3%83%88%E3%83%BC%E3%82%AF%E3%83%B3'
  - name: Company
    externalDocs:
      url: 'https://developer.kingtime.jp/#%E4%BC%81%E6%A5%AD%E6%83%85%E5%A0%B1'
  - name: Administrator
    externalDocs:
      url: 'https://developer.kingtime.jp/#%E7%AE%A1%E7%90%86%E8%80%85'
  - name: Employee
    externalDocs:
      url: 'https://developer.kingtime.jp/#%E5%BE%93%E6%A5%AD%E5%93%A1'
