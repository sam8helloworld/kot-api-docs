/*
KING OF TIME WebAPI

KING OF TIME WebAPI specification https://developer.kingtime.jp/

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetAccessTokenAvailability200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetAccessTokenAvailability200Response{}

// GetAccessTokenAvailability200Response struct for GetAccessTokenAvailability200Response
type GetAccessTokenAvailability200Response struct {
	Available bool `json:"available"`
}

// NewGetAccessTokenAvailability200Response instantiates a new GetAccessTokenAvailability200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetAccessTokenAvailability200Response(available bool) *GetAccessTokenAvailability200Response {
	this := GetAccessTokenAvailability200Response{}
	this.Available = available
	return &this
}

// NewGetAccessTokenAvailability200ResponseWithDefaults instantiates a new GetAccessTokenAvailability200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetAccessTokenAvailability200ResponseWithDefaults() *GetAccessTokenAvailability200Response {
	this := GetAccessTokenAvailability200Response{}
	return &this
}

// GetAvailable returns the Available field value
func (o *GetAccessTokenAvailability200Response) GetAvailable() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Available
}

// GetAvailableOk returns a tuple with the Available field value
// and a boolean to check if the value has been set.
func (o *GetAccessTokenAvailability200Response) GetAvailableOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Available, true
}

// SetAvailable sets field value
func (o *GetAccessTokenAvailability200Response) SetAvailable(v bool) {
	o.Available = v
}

func (o GetAccessTokenAvailability200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetAccessTokenAvailability200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["available"] = o.Available
	return toSerialize, nil
}

type NullableGetAccessTokenAvailability200Response struct {
	value *GetAccessTokenAvailability200Response
	isSet bool
}

func (v NullableGetAccessTokenAvailability200Response) Get() *GetAccessTokenAvailability200Response {
	return v.value
}

func (v *NullableGetAccessTokenAvailability200Response) Set(val *GetAccessTokenAvailability200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetAccessTokenAvailability200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetAccessTokenAvailability200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetAccessTokenAvailability200Response(val *GetAccessTokenAvailability200Response) *NullableGetAccessTokenAvailability200Response {
	return &NullableGetAccessTokenAvailability200Response{value: val, isSet: true}
}

func (v NullableGetAccessTokenAvailability200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetAccessTokenAvailability200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


