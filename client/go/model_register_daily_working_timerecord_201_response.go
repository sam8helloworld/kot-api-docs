/*
KING OF TIME WebAPI

KING OF TIME WebAPI specification https://developer.kingtime.jp/

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the RegisterDailyWorkingTimerecord201Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RegisterDailyWorkingTimerecord201Response{}

// RegisterDailyWorkingTimerecord201Response struct for RegisterDailyWorkingTimerecord201Response
type RegisterDailyWorkingTimerecord201Response struct {
	// 日時
	Date string `json:"date"`
	// 従業員識別キー（従業員コードが変更されても不変）
	EmployeeKey string `json:"employeeKey"`
	TimeRecord RegisterDailyWorkingTimerecord201ResponseTimeRecord `json:"timeRecord"`
}

// NewRegisterDailyWorkingTimerecord201Response instantiates a new RegisterDailyWorkingTimerecord201Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRegisterDailyWorkingTimerecord201Response(date string, employeeKey string, timeRecord RegisterDailyWorkingTimerecord201ResponseTimeRecord) *RegisterDailyWorkingTimerecord201Response {
	this := RegisterDailyWorkingTimerecord201Response{}
	this.Date = date
	this.EmployeeKey = employeeKey
	this.TimeRecord = timeRecord
	return &this
}

// NewRegisterDailyWorkingTimerecord201ResponseWithDefaults instantiates a new RegisterDailyWorkingTimerecord201Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRegisterDailyWorkingTimerecord201ResponseWithDefaults() *RegisterDailyWorkingTimerecord201Response {
	this := RegisterDailyWorkingTimerecord201Response{}
	return &this
}

// GetDate returns the Date field value
func (o *RegisterDailyWorkingTimerecord201Response) GetDate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Date
}

// GetDateOk returns a tuple with the Date field value
// and a boolean to check if the value has been set.
func (o *RegisterDailyWorkingTimerecord201Response) GetDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Date, true
}

// SetDate sets field value
func (o *RegisterDailyWorkingTimerecord201Response) SetDate(v string) {
	o.Date = v
}

// GetEmployeeKey returns the EmployeeKey field value
func (o *RegisterDailyWorkingTimerecord201Response) GetEmployeeKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EmployeeKey
}

// GetEmployeeKeyOk returns a tuple with the EmployeeKey field value
// and a boolean to check if the value has been set.
func (o *RegisterDailyWorkingTimerecord201Response) GetEmployeeKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EmployeeKey, true
}

// SetEmployeeKey sets field value
func (o *RegisterDailyWorkingTimerecord201Response) SetEmployeeKey(v string) {
	o.EmployeeKey = v
}

// GetTimeRecord returns the TimeRecord field value
func (o *RegisterDailyWorkingTimerecord201Response) GetTimeRecord() RegisterDailyWorkingTimerecord201ResponseTimeRecord {
	if o == nil {
		var ret RegisterDailyWorkingTimerecord201ResponseTimeRecord
		return ret
	}

	return o.TimeRecord
}

// GetTimeRecordOk returns a tuple with the TimeRecord field value
// and a boolean to check if the value has been set.
func (o *RegisterDailyWorkingTimerecord201Response) GetTimeRecordOk() (*RegisterDailyWorkingTimerecord201ResponseTimeRecord, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TimeRecord, true
}

// SetTimeRecord sets field value
func (o *RegisterDailyWorkingTimerecord201Response) SetTimeRecord(v RegisterDailyWorkingTimerecord201ResponseTimeRecord) {
	o.TimeRecord = v
}

func (o RegisterDailyWorkingTimerecord201Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RegisterDailyWorkingTimerecord201Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["date"] = o.Date
	toSerialize["employeeKey"] = o.EmployeeKey
	toSerialize["timeRecord"] = o.TimeRecord
	return toSerialize, nil
}

type NullableRegisterDailyWorkingTimerecord201Response struct {
	value *RegisterDailyWorkingTimerecord201Response
	isSet bool
}

func (v NullableRegisterDailyWorkingTimerecord201Response) Get() *RegisterDailyWorkingTimerecord201Response {
	return v.value
}

func (v *NullableRegisterDailyWorkingTimerecord201Response) Set(val *RegisterDailyWorkingTimerecord201Response) {
	v.value = val
	v.isSet = true
}

func (v NullableRegisterDailyWorkingTimerecord201Response) IsSet() bool {
	return v.isSet
}

func (v *NullableRegisterDailyWorkingTimerecord201Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRegisterDailyWorkingTimerecord201Response(val *RegisterDailyWorkingTimerecord201Response) *NullableRegisterDailyWorkingTimerecord201Response {
	return &NullableRegisterDailyWorkingTimerecord201Response{value: val, isSet: true}
}

func (v NullableRegisterDailyWorkingTimerecord201Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRegisterDailyWorkingTimerecord201Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


