/*
KING OF TIME WebAPI

KING OF TIME WebAPI specification https://developer.kingtime.jp/

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetDailyWorkingTimerecords200ResponseInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetDailyWorkingTimerecords200ResponseInner{}

// GetDailyWorkingTimerecords200ResponseInner struct for GetDailyWorkingTimerecords200ResponseInner
type GetDailyWorkingTimerecords200ResponseInner struct {
	// 日時
	Date string `json:"date"`
	// 従業員識別キー（従業員コードが変更されても不変）
	EmployeeKey string `json:"employeeKey"`
	// 打刻
	TimeRecord []Object `json:"timeRecord"`
	CurrentDateEmployee *GetDailyWorkingTimerecords200ResponseInnerCurrentDateEmployee `json:"currentDateEmployee,omitempty"`
}

// NewGetDailyWorkingTimerecords200ResponseInner instantiates a new GetDailyWorkingTimerecords200ResponseInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetDailyWorkingTimerecords200ResponseInner(date string, employeeKey string, timeRecord []Object) *GetDailyWorkingTimerecords200ResponseInner {
	this := GetDailyWorkingTimerecords200ResponseInner{}
	this.Date = date
	this.EmployeeKey = employeeKey
	this.TimeRecord = timeRecord
	return &this
}

// NewGetDailyWorkingTimerecords200ResponseInnerWithDefaults instantiates a new GetDailyWorkingTimerecords200ResponseInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetDailyWorkingTimerecords200ResponseInnerWithDefaults() *GetDailyWorkingTimerecords200ResponseInner {
	this := GetDailyWorkingTimerecords200ResponseInner{}
	return &this
}

// GetDate returns the Date field value
func (o *GetDailyWorkingTimerecords200ResponseInner) GetDate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Date
}

// GetDateOk returns a tuple with the Date field value
// and a boolean to check if the value has been set.
func (o *GetDailyWorkingTimerecords200ResponseInner) GetDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Date, true
}

// SetDate sets field value
func (o *GetDailyWorkingTimerecords200ResponseInner) SetDate(v string) {
	o.Date = v
}

// GetEmployeeKey returns the EmployeeKey field value
func (o *GetDailyWorkingTimerecords200ResponseInner) GetEmployeeKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EmployeeKey
}

// GetEmployeeKeyOk returns a tuple with the EmployeeKey field value
// and a boolean to check if the value has been set.
func (o *GetDailyWorkingTimerecords200ResponseInner) GetEmployeeKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EmployeeKey, true
}

// SetEmployeeKey sets field value
func (o *GetDailyWorkingTimerecords200ResponseInner) SetEmployeeKey(v string) {
	o.EmployeeKey = v
}

// GetTimeRecord returns the TimeRecord field value
func (o *GetDailyWorkingTimerecords200ResponseInner) GetTimeRecord() []Object {
	if o == nil {
		var ret []Object
		return ret
	}

	return o.TimeRecord
}

// GetTimeRecordOk returns a tuple with the TimeRecord field value
// and a boolean to check if the value has been set.
func (o *GetDailyWorkingTimerecords200ResponseInner) GetTimeRecordOk() ([]Object, bool) {
	if o == nil {
		return nil, false
	}
	return o.TimeRecord, true
}

// SetTimeRecord sets field value
func (o *GetDailyWorkingTimerecords200ResponseInner) SetTimeRecord(v []Object) {
	o.TimeRecord = v
}

// GetCurrentDateEmployee returns the CurrentDateEmployee field value if set, zero value otherwise.
func (o *GetDailyWorkingTimerecords200ResponseInner) GetCurrentDateEmployee() GetDailyWorkingTimerecords200ResponseInnerCurrentDateEmployee {
	if o == nil || IsNil(o.CurrentDateEmployee) {
		var ret GetDailyWorkingTimerecords200ResponseInnerCurrentDateEmployee
		return ret
	}
	return *o.CurrentDateEmployee
}

// GetCurrentDateEmployeeOk returns a tuple with the CurrentDateEmployee field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDailyWorkingTimerecords200ResponseInner) GetCurrentDateEmployeeOk() (*GetDailyWorkingTimerecords200ResponseInnerCurrentDateEmployee, bool) {
	if o == nil || IsNil(o.CurrentDateEmployee) {
		return nil, false
	}
	return o.CurrentDateEmployee, true
}

// HasCurrentDateEmployee returns a boolean if a field has been set.
func (o *GetDailyWorkingTimerecords200ResponseInner) HasCurrentDateEmployee() bool {
	if o != nil && !IsNil(o.CurrentDateEmployee) {
		return true
	}

	return false
}

// SetCurrentDateEmployee gets a reference to the given GetDailyWorkingTimerecords200ResponseInnerCurrentDateEmployee and assigns it to the CurrentDateEmployee field.
func (o *GetDailyWorkingTimerecords200ResponseInner) SetCurrentDateEmployee(v GetDailyWorkingTimerecords200ResponseInnerCurrentDateEmployee) {
	o.CurrentDateEmployee = &v
}

func (o GetDailyWorkingTimerecords200ResponseInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetDailyWorkingTimerecords200ResponseInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["date"] = o.Date
	toSerialize["employeeKey"] = o.EmployeeKey
	toSerialize["timeRecord"] = o.TimeRecord
	if !IsNil(o.CurrentDateEmployee) {
		toSerialize["currentDateEmployee"] = o.CurrentDateEmployee
	}
	return toSerialize, nil
}

type NullableGetDailyWorkingTimerecords200ResponseInner struct {
	value *GetDailyWorkingTimerecords200ResponseInner
	isSet bool
}

func (v NullableGetDailyWorkingTimerecords200ResponseInner) Get() *GetDailyWorkingTimerecords200ResponseInner {
	return v.value
}

func (v *NullableGetDailyWorkingTimerecords200ResponseInner) Set(val *GetDailyWorkingTimerecords200ResponseInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetDailyWorkingTimerecords200ResponseInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetDailyWorkingTimerecords200ResponseInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetDailyWorkingTimerecords200ResponseInner(val *GetDailyWorkingTimerecords200ResponseInner) *NullableGetDailyWorkingTimerecords200ResponseInner {
	return &NullableGetDailyWorkingTimerecords200ResponseInner{value: val, isSet: true}
}

func (v NullableGetDailyWorkingTimerecords200ResponseInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetDailyWorkingTimerecords200ResponseInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


