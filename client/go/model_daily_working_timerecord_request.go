/*
KING OF TIME WebAPI

KING OF TIME WebAPI specification https://developer.kingtime.jp/

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the DailyWorkingTimerecordRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DailyWorkingTimerecordRequest{}

// DailyWorkingTimerecordRequest struct for DailyWorkingTimerecordRequest
type DailyWorkingTimerecordRequest struct {
	// 打刻時間
	Time time.Time `json:"time"`
	// 打刻種別コード（1： 出勤　2： 退勤　3： 休憩開始　4： 休憩終了　7： 外出入　8： 外出戻） 省略時は、KING OF TIMEの処理に従って打刻種別を決定します。
	Code *string `json:"code,omitempty"`
	// 打刻先所属コード 省略時は、該当従業員が所属している所属を打刻先所属として扱います。
	DivisionCode *string `json:"divisionCode,omitempty"`
	// 勤務日 指定された勤務日に打刻データが紐づきます。
	Date string `json:"date"`
	// 緯度
	Latitude *float64 `json:"latitude,omitempty"`
	// 経度
	Longitude *float64 `json:"longitude,omitempty"`
}

// NewDailyWorkingTimerecordRequest instantiates a new DailyWorkingTimerecordRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDailyWorkingTimerecordRequest(time time.Time, date string) *DailyWorkingTimerecordRequest {
	this := DailyWorkingTimerecordRequest{}
	this.Time = time
	this.Date = date
	return &this
}

// NewDailyWorkingTimerecordRequestWithDefaults instantiates a new DailyWorkingTimerecordRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDailyWorkingTimerecordRequestWithDefaults() *DailyWorkingTimerecordRequest {
	this := DailyWorkingTimerecordRequest{}
	return &this
}

// GetTime returns the Time field value
func (o *DailyWorkingTimerecordRequest) GetTime() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Time
}

// GetTimeOk returns a tuple with the Time field value
// and a boolean to check if the value has been set.
func (o *DailyWorkingTimerecordRequest) GetTimeOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Time, true
}

// SetTime sets field value
func (o *DailyWorkingTimerecordRequest) SetTime(v time.Time) {
	o.Time = v
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *DailyWorkingTimerecordRequest) GetCode() string {
	if o == nil || IsNil(o.Code) {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DailyWorkingTimerecordRequest) GetCodeOk() (*string, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *DailyWorkingTimerecordRequest) HasCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *DailyWorkingTimerecordRequest) SetCode(v string) {
	o.Code = &v
}

// GetDivisionCode returns the DivisionCode field value if set, zero value otherwise.
func (o *DailyWorkingTimerecordRequest) GetDivisionCode() string {
	if o == nil || IsNil(o.DivisionCode) {
		var ret string
		return ret
	}
	return *o.DivisionCode
}

// GetDivisionCodeOk returns a tuple with the DivisionCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DailyWorkingTimerecordRequest) GetDivisionCodeOk() (*string, bool) {
	if o == nil || IsNil(o.DivisionCode) {
		return nil, false
	}
	return o.DivisionCode, true
}

// HasDivisionCode returns a boolean if a field has been set.
func (o *DailyWorkingTimerecordRequest) HasDivisionCode() bool {
	if o != nil && !IsNil(o.DivisionCode) {
		return true
	}

	return false
}

// SetDivisionCode gets a reference to the given string and assigns it to the DivisionCode field.
func (o *DailyWorkingTimerecordRequest) SetDivisionCode(v string) {
	o.DivisionCode = &v
}

// GetDate returns the Date field value
func (o *DailyWorkingTimerecordRequest) GetDate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Date
}

// GetDateOk returns a tuple with the Date field value
// and a boolean to check if the value has been set.
func (o *DailyWorkingTimerecordRequest) GetDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Date, true
}

// SetDate sets field value
func (o *DailyWorkingTimerecordRequest) SetDate(v string) {
	o.Date = v
}

// GetLatitude returns the Latitude field value if set, zero value otherwise.
func (o *DailyWorkingTimerecordRequest) GetLatitude() float64 {
	if o == nil || IsNil(o.Latitude) {
		var ret float64
		return ret
	}
	return *o.Latitude
}

// GetLatitudeOk returns a tuple with the Latitude field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DailyWorkingTimerecordRequest) GetLatitudeOk() (*float64, bool) {
	if o == nil || IsNil(o.Latitude) {
		return nil, false
	}
	return o.Latitude, true
}

// HasLatitude returns a boolean if a field has been set.
func (o *DailyWorkingTimerecordRequest) HasLatitude() bool {
	if o != nil && !IsNil(o.Latitude) {
		return true
	}

	return false
}

// SetLatitude gets a reference to the given float64 and assigns it to the Latitude field.
func (o *DailyWorkingTimerecordRequest) SetLatitude(v float64) {
	o.Latitude = &v
}

// GetLongitude returns the Longitude field value if set, zero value otherwise.
func (o *DailyWorkingTimerecordRequest) GetLongitude() float64 {
	if o == nil || IsNil(o.Longitude) {
		var ret float64
		return ret
	}
	return *o.Longitude
}

// GetLongitudeOk returns a tuple with the Longitude field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DailyWorkingTimerecordRequest) GetLongitudeOk() (*float64, bool) {
	if o == nil || IsNil(o.Longitude) {
		return nil, false
	}
	return o.Longitude, true
}

// HasLongitude returns a boolean if a field has been set.
func (o *DailyWorkingTimerecordRequest) HasLongitude() bool {
	if o != nil && !IsNil(o.Longitude) {
		return true
	}

	return false
}

// SetLongitude gets a reference to the given float64 and assigns it to the Longitude field.
func (o *DailyWorkingTimerecordRequest) SetLongitude(v float64) {
	o.Longitude = &v
}

func (o DailyWorkingTimerecordRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DailyWorkingTimerecordRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["time"] = o.Time
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.DivisionCode) {
		toSerialize["divisionCode"] = o.DivisionCode
	}
	toSerialize["date"] = o.Date
	if !IsNil(o.Latitude) {
		toSerialize["latitude"] = o.Latitude
	}
	if !IsNil(o.Longitude) {
		toSerialize["longitude"] = o.Longitude
	}
	return toSerialize, nil
}

type NullableDailyWorkingTimerecordRequest struct {
	value *DailyWorkingTimerecordRequest
	isSet bool
}

func (v NullableDailyWorkingTimerecordRequest) Get() *DailyWorkingTimerecordRequest {
	return v.value
}

func (v *NullableDailyWorkingTimerecordRequest) Set(val *DailyWorkingTimerecordRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDailyWorkingTimerecordRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDailyWorkingTimerecordRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDailyWorkingTimerecordRequest(val *DailyWorkingTimerecordRequest) *NullableDailyWorkingTimerecordRequest {
	return &NullableDailyWorkingTimerecordRequest{value: val, isSet: true}
}

func (v NullableDailyWorkingTimerecordRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDailyWorkingTimerecordRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


