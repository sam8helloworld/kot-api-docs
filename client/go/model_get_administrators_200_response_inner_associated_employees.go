/*
KING OF TIME WebAPI

KING OF TIME WebAPI specification https://developer.kingtime.jp/

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetAdministrators200ResponseInnerAssociatedEmployees type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetAdministrators200ResponseInnerAssociatedEmployees{}

// GetAdministrators200ResponseInnerAssociatedEmployees 割当従業員
type GetAdministrators200ResponseInnerAssociatedEmployees struct {
	// 従業員コード
	Code string `json:"code"`
	// 従業員識別キー（従業員コードが変更されても不変）
	Key string `json:"key"`
	// 姓
	LastName string `json:"lastName"`
	// 名
	FirstName string `json:"firstName"`
}

// NewGetAdministrators200ResponseInnerAssociatedEmployees instantiates a new GetAdministrators200ResponseInnerAssociatedEmployees object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetAdministrators200ResponseInnerAssociatedEmployees(code string, key string, lastName string, firstName string) *GetAdministrators200ResponseInnerAssociatedEmployees {
	this := GetAdministrators200ResponseInnerAssociatedEmployees{}
	this.Code = code
	this.Key = key
	this.LastName = lastName
	this.FirstName = firstName
	return &this
}

// NewGetAdministrators200ResponseInnerAssociatedEmployeesWithDefaults instantiates a new GetAdministrators200ResponseInnerAssociatedEmployees object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetAdministrators200ResponseInnerAssociatedEmployeesWithDefaults() *GetAdministrators200ResponseInnerAssociatedEmployees {
	this := GetAdministrators200ResponseInnerAssociatedEmployees{}
	return &this
}

// GetCode returns the Code field value
func (o *GetAdministrators200ResponseInnerAssociatedEmployees) GetCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Code
}

// GetCodeOk returns a tuple with the Code field value
// and a boolean to check if the value has been set.
func (o *GetAdministrators200ResponseInnerAssociatedEmployees) GetCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Code, true
}

// SetCode sets field value
func (o *GetAdministrators200ResponseInnerAssociatedEmployees) SetCode(v string) {
	o.Code = v
}

// GetKey returns the Key field value
func (o *GetAdministrators200ResponseInnerAssociatedEmployees) GetKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Key
}

// GetKeyOk returns a tuple with the Key field value
// and a boolean to check if the value has been set.
func (o *GetAdministrators200ResponseInnerAssociatedEmployees) GetKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Key, true
}

// SetKey sets field value
func (o *GetAdministrators200ResponseInnerAssociatedEmployees) SetKey(v string) {
	o.Key = v
}

// GetLastName returns the LastName field value
func (o *GetAdministrators200ResponseInnerAssociatedEmployees) GetLastName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LastName
}

// GetLastNameOk returns a tuple with the LastName field value
// and a boolean to check if the value has been set.
func (o *GetAdministrators200ResponseInnerAssociatedEmployees) GetLastNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastName, true
}

// SetLastName sets field value
func (o *GetAdministrators200ResponseInnerAssociatedEmployees) SetLastName(v string) {
	o.LastName = v
}

// GetFirstName returns the FirstName field value
func (o *GetAdministrators200ResponseInnerAssociatedEmployees) GetFirstName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FirstName
}

// GetFirstNameOk returns a tuple with the FirstName field value
// and a boolean to check if the value has been set.
func (o *GetAdministrators200ResponseInnerAssociatedEmployees) GetFirstNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FirstName, true
}

// SetFirstName sets field value
func (o *GetAdministrators200ResponseInnerAssociatedEmployees) SetFirstName(v string) {
	o.FirstName = v
}

func (o GetAdministrators200ResponseInnerAssociatedEmployees) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetAdministrators200ResponseInnerAssociatedEmployees) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["code"] = o.Code
	toSerialize["key"] = o.Key
	toSerialize["lastName"] = o.LastName
	toSerialize["firstName"] = o.FirstName
	return toSerialize, nil
}

type NullableGetAdministrators200ResponseInnerAssociatedEmployees struct {
	value *GetAdministrators200ResponseInnerAssociatedEmployees
	isSet bool
}

func (v NullableGetAdministrators200ResponseInnerAssociatedEmployees) Get() *GetAdministrators200ResponseInnerAssociatedEmployees {
	return v.value
}

func (v *NullableGetAdministrators200ResponseInnerAssociatedEmployees) Set(val *GetAdministrators200ResponseInnerAssociatedEmployees) {
	v.value = val
	v.isSet = true
}

func (v NullableGetAdministrators200ResponseInnerAssociatedEmployees) IsSet() bool {
	return v.isSet
}

func (v *NullableGetAdministrators200ResponseInnerAssociatedEmployees) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetAdministrators200ResponseInnerAssociatedEmployees(val *GetAdministrators200ResponseInnerAssociatedEmployees) *NullableGetAdministrators200ResponseInnerAssociatedEmployees {
	return &NullableGetAdministrators200ResponseInnerAssociatedEmployees{value: val, isSet: true}
}

func (v NullableGetAdministrators200ResponseInnerAssociatedEmployees) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetAdministrators200ResponseInnerAssociatedEmployees) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


