/*
KING OF TIME WebAPI

KING OF TIME WebAPI specification https://developer.kingtime.jp/

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DailyWorkingResponseHolidaysObtainedHalfdayHolidays type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DailyWorkingResponseHolidaysObtainedHalfdayHolidays{}

// DailyWorkingResponseHolidaysObtainedHalfdayHolidays struct for DailyWorkingResponseHolidaysObtainedHalfdayHolidays
type DailyWorkingResponseHolidaysObtainedHalfdayHolidays struct {
	// 半休種別名
	TypeName string `json:"typeName"`
	// 休暇区分コード
	Code int32 `json:"code"`
	// 休暇区分名
	Name string `json:"name"`
}

// NewDailyWorkingResponseHolidaysObtainedHalfdayHolidays instantiates a new DailyWorkingResponseHolidaysObtainedHalfdayHolidays object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDailyWorkingResponseHolidaysObtainedHalfdayHolidays(typeName string, code int32, name string) *DailyWorkingResponseHolidaysObtainedHalfdayHolidays {
	this := DailyWorkingResponseHolidaysObtainedHalfdayHolidays{}
	this.TypeName = typeName
	this.Code = code
	this.Name = name
	return &this
}

// NewDailyWorkingResponseHolidaysObtainedHalfdayHolidaysWithDefaults instantiates a new DailyWorkingResponseHolidaysObtainedHalfdayHolidays object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDailyWorkingResponseHolidaysObtainedHalfdayHolidaysWithDefaults() *DailyWorkingResponseHolidaysObtainedHalfdayHolidays {
	this := DailyWorkingResponseHolidaysObtainedHalfdayHolidays{}
	return &this
}

// GetTypeName returns the TypeName field value
func (o *DailyWorkingResponseHolidaysObtainedHalfdayHolidays) GetTypeName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TypeName
}

// GetTypeNameOk returns a tuple with the TypeName field value
// and a boolean to check if the value has been set.
func (o *DailyWorkingResponseHolidaysObtainedHalfdayHolidays) GetTypeNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TypeName, true
}

// SetTypeName sets field value
func (o *DailyWorkingResponseHolidaysObtainedHalfdayHolidays) SetTypeName(v string) {
	o.TypeName = v
}

// GetCode returns the Code field value
func (o *DailyWorkingResponseHolidaysObtainedHalfdayHolidays) GetCode() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Code
}

// GetCodeOk returns a tuple with the Code field value
// and a boolean to check if the value has been set.
func (o *DailyWorkingResponseHolidaysObtainedHalfdayHolidays) GetCodeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Code, true
}

// SetCode sets field value
func (o *DailyWorkingResponseHolidaysObtainedHalfdayHolidays) SetCode(v int32) {
	o.Code = v
}

// GetName returns the Name field value
func (o *DailyWorkingResponseHolidaysObtainedHalfdayHolidays) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *DailyWorkingResponseHolidaysObtainedHalfdayHolidays) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *DailyWorkingResponseHolidaysObtainedHalfdayHolidays) SetName(v string) {
	o.Name = v
}

func (o DailyWorkingResponseHolidaysObtainedHalfdayHolidays) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DailyWorkingResponseHolidaysObtainedHalfdayHolidays) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["typeName"] = o.TypeName
	toSerialize["code"] = o.Code
	toSerialize["name"] = o.Name
	return toSerialize, nil
}

type NullableDailyWorkingResponseHolidaysObtainedHalfdayHolidays struct {
	value *DailyWorkingResponseHolidaysObtainedHalfdayHolidays
	isSet bool
}

func (v NullableDailyWorkingResponseHolidaysObtainedHalfdayHolidays) Get() *DailyWorkingResponseHolidaysObtainedHalfdayHolidays {
	return v.value
}

func (v *NullableDailyWorkingResponseHolidaysObtainedHalfdayHolidays) Set(val *DailyWorkingResponseHolidaysObtainedHalfdayHolidays) {
	v.value = val
	v.isSet = true
}

func (v NullableDailyWorkingResponseHolidaysObtainedHalfdayHolidays) IsSet() bool {
	return v.isSet
}

func (v *NullableDailyWorkingResponseHolidaysObtainedHalfdayHolidays) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDailyWorkingResponseHolidaysObtainedHalfdayHolidays(val *DailyWorkingResponseHolidaysObtainedHalfdayHolidays) *NullableDailyWorkingResponseHolidaysObtainedHalfdayHolidays {
	return &NullableDailyWorkingResponseHolidaysObtainedHalfdayHolidays{value: val, isSet: true}
}

func (v NullableDailyWorkingResponseHolidaysObtainedHalfdayHolidays) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDailyWorkingResponseHolidaysObtainedHalfdayHolidays) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


